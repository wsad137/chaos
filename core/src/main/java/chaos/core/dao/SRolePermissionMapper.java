package chaos.core.dao;

import chaos.core.model.SRolePermission;
import org.apache.ibatis.annotations.*;

public interface SRolePermissionMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_role_permission
     *
     * @mbg.generated
     */
    @Delete({
        "delete from s_role_permission",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_role_permission
     *
     * @mbg.generated
     */
    @Insert({
        "insert into s_role_permission (rid, pid)",
        "values (#{rid,jdbcType=BIGINT}, #{pid,jdbcType=BIGINT})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Long.class)
    int insert(SRolePermission record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_role_permission
     *
     * @mbg.generated
     */
    int insertSelective(SRolePermission record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_role_permission
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, rid, pid",
        "from s_role_permission",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @ResultMap("chaos.core.dao.SRolePermissionMapper.BaseResultMap")
    SRolePermission selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_role_permission
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(SRolePermission record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_role_permission
     *
     * @mbg.generated
     */
    @Update({
        "update s_role_permission",
        "set rid = #{rid,jdbcType=BIGINT},",
          "pid = #{pid,jdbcType=BIGINT}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(SRolePermission record);
}