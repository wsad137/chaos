package chaos.core.dao;

import chaos.core.model.SPermission;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.Update;

public interface SPermissionMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_permission
     *
     * @mbg.generated
     */
    @Delete({
        "delete from s_permission",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_permission
     *
     * @mbg.generated
     */
    @Insert({
        "insert into s_permission (url, name)",
        "values (#{url,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Long.class)
    int insert(SPermission record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_permission
     *
     * @mbg.generated
     */
    int insertSelective(SPermission record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_permission
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, url, name",
        "from s_permission",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @ResultMap("chaos.core.dao.SPermissionMapper.BaseResultMap")
    SPermission selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_permission
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(SPermission record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_permission
     *
     * @mbg.generated
     */
    @Update({
        "update s_permission",
        "set url = #{url,jdbcType=VARCHAR},",
          "name = #{name,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(SPermission record);
}