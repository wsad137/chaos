<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!-- ========================================配置数据源========================================= -->

    <!--<import resource="spring-beans.xml"/>-->
    <!--<context:property-placeholder location="classpath*:*.properties" file-encoding="utf-8"/>-->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="connectionInitSqls">
            <list>
                <value>set names 'utf8mb4'</value>
            </list>
        </property>
        <!--<property name="connectionProperties">-->
            <!--<props>-->
                <!--&lt;!&ndash;连接池中保存的最大连接数目&ndash;&gt;-->
                <!--<prop key="maxPoolSize">20</prop>-->
                <!--&lt;!&ndash;连接池中保存的最少连接数目&ndash;&gt;-->
                <!--<prop key="minPoolSize">2</prop>-->
                <!--&lt;!&ndash; 初始化连接大小 &ndash;&gt;-->
                <!--<prop key="initialPoolSize">2</prop>-->
                <!--&lt;!&ndash; 获取连接最大等待时间 &ndash;&gt;-->
                <!--<prop key="maxConnectionAge">6000</prop>-->
                <!--&lt;!&ndash; 连接池最大空闲 &ndash;&gt;-->
                <!--<prop key="maxIdleTime">60</prop>-->
            <!--</props>-->
        <!--</property>-->
    </bean>
    <!--<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">-->
        <!--<property name="driverClassName" value="${jdbc.driverClassName}"/>-->
        <!--<property name="url" value="${jdbc.url}"/>-->
        <!--<property name="username" value="${jdbc.username}"/>-->
        <!--<property name="password" value="${jdbc.password}"/>-->
        <!--<property name="connectionProperties">-->
            <!--<props>-->
                <!--&lt;!&ndash;连接池中保存的最大连接数目&ndash;&gt;-->
                <!--<prop key="maxPoolSize">20</prop>-->
                <!--&lt;!&ndash;连接池中保存的最少连接数目&ndash;&gt;-->
                <!--<prop key="minPoolSize">2</prop>-->
                <!--&lt;!&ndash; 初始化连接大小 &ndash;&gt;-->
                <!--<prop key="initialPoolSize">2</prop>-->
                <!--&lt;!&ndash; 获取连接最大等待时间 &ndash;&gt;-->
                <!--<prop key="maxConnectionAge">6000</prop>-->
                <!--&lt;!&ndash; 连接池最大空闲 &ndash;&gt;-->
                <!--<prop key="maxIdleTime">60</prop>-->
            <!--</props>-->
        <!--</property>-->
    <!--</bean>-->

    <!-- 配置扫描器 -->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 扫描me.gacl.dao这个包以及它的子包下的所有映射接口类 -->
        <!--<property name="basePackage" value="*"/>-->
        <property name="basePackage" value="**.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--<property name="basePackage" value="..."/>-->
        <!--<property name="basePackage" value="${package.dao}"/>-->
    </bean>

    <!-- ========================================针对myBatis的配置项============================== -->
    <!-- 配置sqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 实例化sqlSessionFactory时需要使用上述配置好的数据源以及SQL映射文件 -->
        <property name="dataSource" ref="dataSource"/>
        <!--<property name="databaseIdProvider" value=""></property>-->
        <!--<property name="configurationProperties">-->
        <!--<props>-->
        <!--<prop key="defaultExecutorType">SIMPLE</prop>-->
        <!--<prop key="useGeneratedKeys">true</prop>-->
        <!--</props>-->
        <!--</property>-->
        <!-- 自动扫描me/gacl/mapping/目录下的所有SQL映射的xml文件, 省掉Configuration.xml里的手工配置
        value="classpath:me/gacl/mapping/*.xml"指的是classpath(类路径)下me.gacl.mapping包中的所有xml文件
        UserMapper.xml位于me.gacl.mapping包下，这样UserMapper.xml就可以被自动扫描
         -->
        <!--<property name="typeAliasesPackage" value="classpath:controller/mts/box/dao/"/>-->
        <!--<property name="typeAliasesPackage" value="classpath*:**/dao/"/>-->
        <property name="mapperLocations" value="classpath:**/dao/mapping/*.xml"/>
        <!--<property name="mapperLocations" value="classpath:controller/mts/box/dao/mapping/*.xml"/>-->
        <property name="plugins">
            <array>
                <!--<bean class="ttw.shop.interceptor.MyInterceptor"/>-->
                <!--<bean class="ttw.shop.interceptor.PageInterceptor">-->
                <!--<property name="properties">-->
                <!--<props>-->
                <!--<prop key="databaseType">mysql</prop>-->
                <!--</props>-->
                <!--</property>-->
                <!--</bean>-->
                <bean class="com.github.pagehelper.PageHelper">
                    <property name="properties">
                        <!--<value>-->
                        <!--dialect=hsqldb-->
                        <!--</value>-->
                        <props>
                            <prop key="dialect">mysql</prop>
                        </props>
                    </property>
                </bean>
            </array>
        </property>
    </bean>


    <!-- ========================================分隔线========================================= -->
    <!-- 配置Spring的事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 注解方式配置事物 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- 拦截器方式配置事物 -->
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="append*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="edit*" propagation="REQUIRED"/>
            <tx:method name="modify*" propagation="REQUIRED"/>
            <tx:method name="repair" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="remove*" propagation="REQUIRED"/>
            <tx:method name="delAndRepair" propagation="REQUIRED"/>

            <tx:method name="get*" propagation="SUPPORTS"/>
            <tx:method name="find*" propagation="SUPPORTS"/>
            <tx:method name="load*" propagation="SUPPORTS"/>
            <tx:method name="search*" propagation="SUPPORTS"/>
            <tx:method name="datagrid*" propagation="SUPPORTS"/>

            <tx:method name="*" propagation="SUPPORTS"/>
        </tx:attributes>
    </tx:advice>

    <!-- 配置事务切面 -->
    <aop:config>
        <aop:pointcut id="serviceOperation" expression="execution(* com..service.*.*(..))"/>
        <aop:advisor advice-ref="transactionAdvice" pointcut-ref="serviceOperation"/>
    </aop:config>
</beans>